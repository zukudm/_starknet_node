- name: Install 
  vars_files: 
    - vars/vars.yml
  hosts: "{{ host }}"
  gather_facts: no
  become: yes    
  
  tasks:
    
      


      - name: Validate if API url was defined
        assert:
          that: 
            - pathfinder_api_token_url  is defined
          fail_msg: "API KEY was not provided!"
          

      - name: Version to checkout Init
        set_fact: checkout_version="{{ pathfinder_version }}"
      
      - block: 

          - name: Check latest version
            uri:
              url: "{{ pathfinder_githubapi_url }}"
              return_content: true
            register: pathfinder_latest

          - name: Define version to checkout
            set_fact: checkout_version="{{ pathfinder_latest.json.tag_name }}"

          
        when: pathfinder_version == 'latest'

      - name: Print latest checkout_version variable
        debug:
          msg: "{{ checkout_version }}" 

      - name: Check if node has a new version
        assert:
          that: 
            - " {{ hostvars['localhost']['starknet_current_version'] }} is defined"
            - " {{ hostvars['localhost']['starknet_current_version'] }} != checkout_version"
          fail_msg: "Update is not available"

      - name: Remove old container if exists
        community.docker.docker_container:
          name: "{{ container_name }}"
          state: absent
      
      - name: Start the container 
        include_tasks: "run_starknet_container.yml"

      - name: Save installed version as localhost variable
        run_once: yes
        delegate_to: localhost
        delegate_facts: yes
        set_fact:
          starknet_current_version: "{{ checkout_version }}"
