    # - name: Remove old container if exists
    #   community.docker.docker_container:
    #     name: "{{ container_name }}"
    #     state: absent

    # - name: Remove an old volume if exists
    #   community.docker.docker_volume:
    #     name: "{{ volume_name }}"
    #     state: absent

    - name: Validate the activity
      assert:
        that: 
          - pathfinder_api_token  != 'not_defined'
        fail_msg: "Invalid API KEY provided"
        success_msg: "API KEY looks good!"

    - name: Version to checkout Init
      set_fact: checkout_version="{{ pathfinder_version }}"
    
    - block: 

        - name: Check latest version
          uri:
            url: "{{ pathfinder_githubapi_url }}"
            return_content: true
          register: pathfinder_latest

        - name: Print latest version
          debug:
            msg: "{{ pathfinder_latest.json.tag_name }}"
        
        - name: Define version to checkout
          set_fact: checkout_version="{{ pathfinder_latest.json.tag_name }}"

        
      when: pathfinder_version == 'latest'

    - name: Print latest pathfinder_version variable
      debug:
        msg: "{{ checkout_version }}"  


      



    # - name: Git checkout
    #   ansible.builtin.git:
    #     repo: '{{ pathfinder_git_link }}'
    #     dest: "{{ pathfinder_git_name }}/"
    #     version: "{{ pathfinder_version }}"

      

          